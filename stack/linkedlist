#include<stdio.h>
#include<stdlib.h>
struct node{
    int data;
    struct node *next;
};
void traversal(struct node *sptr){
    while(sptr!=NULL){
        printf("%d\n",sptr->data);
        sptr=sptr->next;
    }
}
int isempty(struct node *top){
    if(top==NULL){
        return 1;
    }
    else{
        return 0;
    }
}
int isfull(struct node *top){
    struct node *p=(struct node *)malloc(sizeof(struct node));
    if(p==NULL){
        return 1;
    }
    else{
        return 0;
    }
}
struct node *push(struct node *top,int x){
    if(isfull(top)){
        printf("stack overflow");
    }
    else{
        struct node *n=(struct node *)malloc(sizeof(struct node));
        n->data=x;
        n->next=top;
        top=n;
        return top;
    }
}
int pop(struct node **top){
    if(isempty(*top)){
       printf("stack underflow");
    }
    else{
      struct node * n=*top;
       int x=n->data;
       *top=(*top)->next;
        free(n);
       return x;
    }
}
int main(){
    struct node *top=NULL;
    top=push(top,70);
    top=push(top,80);
    top=push(top,90);
    top=push(top,10);
    top=push(top,20);
    traversal(top);
    int element=pop(&top);
    printf("popped element is %d ",element);
    traversal(top);
    return 0;
}
